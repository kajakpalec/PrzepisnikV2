{"version":3,"sources":["components/footer.js","components/recipePreview.js","pages/allRecipes.js","components/header.js","components/menuBar.js","pages/singleRecipe.js","App.js","index.js"],"names":["Footer","href","RICHTEXT_OPIONS","renderNode","BLOCKS","PARAGRAPH","node","children","RecipePreview","recipe","handleShowRecipe","nazwa","documentToReactComponents","krotkiOpis","json","onClick","obj","bind","AllRecipesPage","recipes","map","Header","list","MenuBar","handleClick","handleButtonClick","category","name","SingleRecipe","czasPrzygotowania","stopienTrudnosci","src","zdjecie","url","alt","title","skladniki","skladnik","przygotowanie","App","useState","przepisy","setPrzepisy","isSingleRecipe","setIsSIngleRecipe","recInCategory","setRecInCategory","selectedRecipe","setSelectedRecipe","useEffect","window","fetch","method","headers","Authorization","body","JSON","stringify","query","then","response","data","errors","console","error","przepisyCollection","items","setTimeout","value","rec","filter","rodzaj","includes","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.353b8637.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = () => (\r\n    <>\r\n        <h2>Made with love</h2>\r\n        <h3>Karolina, Karolina, Kasia</h3>\r\n        <a href=\"https://be.contentful.com/login\">Admin panel</a>\r\n    </>\r\n)\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\r\nimport {BLOCKS} from '@contentful/rich-text-types';\r\n\r\nconst RICHTEXT_OPIONS={\r\n    renderNode:{\r\n      [BLOCKS.PARAGRAPH]: (node,children)=>{\r\n        return <p>{children}</p>\r\n      }\r\n    }\r\n  }\r\n\r\nconst RecipePreview = ({recipe, handleShowRecipe}) => {\r\n\r\n  function buttonClicked(obj) {\r\n    handleShowRecipe(obj);\r\n  }\r\n\r\n   return (\r\n      <>\r\n        <h2>{recipe.nazwa}</h2>\r\n        <p>{documentToReactComponents(recipe.krotkiOpis.json,RICHTEXT_OPIONS)}</p>\r\n        <button onClick={buttonClicked.bind(this, recipe.nazwa)}>Pokaż mnie</button> \r\n    </>\r\n)}\r\n\r\nexport default RecipePreview;","import React from 'react';\r\nimport RecipePreview from '../components/recipePreview';\r\n\r\n\r\nconst AllRecipesPage = ({recipes, handleShowRecipe}) => (\r\n    <>\r\n        <h2>Kategoria Przepisu</h2>\r\n        {    \r\n            recipes.map((recipe)=>\r\n            (<RecipePreview recipe={recipe} handleShowRecipe={handleShowRecipe}/>))\r\n        }   \r\n    </>\r\n)\r\n\r\nexport default AllRecipesPage;","import React from 'react';\r\n\r\nconst Header = () => (\r\n    <h1>Przepiśnik</h1>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst list = ['Wszystkie przepisy','Śniadanie', 'Deser', 'Danie wegańskie', 'Kolacja', 'Danie główne']\r\n\r\nconst MenuBar = ({handleClick}) => {\r\n\r\n    function handleButtonClick(obj) {\r\n        handleClick(obj);\r\n    }\r\n\r\n    return ( <>\r\n    {    \r\n        list.map((category)=>\r\n         (<button name={category} onClick={handleButtonClick.bind(this, category)}>{category}</button>))\r\n    }   \r\n    </>)\r\n}\r\n\r\nexport default MenuBar;","import React from 'react';\r\nimport {documentToReactComponents} from \"@contentful/rich-text-react-renderer\"\r\nimport {BLOCKS} from '@contentful/rich-text-types'\r\n\r\nconst RICHTEXT_OPIONS={\r\n  renderNode:{\r\n    [BLOCKS.PARAGRAPH]: (node,children)=>{\r\n      return <p>{children}</p>\r\n    }\r\n  }\r\n}\r\n\r\nconst SingleRecipe = ({recipe}) => (\r\n    <>\r\n        <h1>{recipe.nazwa}</h1>\r\n        {/* rozmiary zdjęć można zmieniać w query żeby wszędzie były takie same */}\r\n        <h3>Czas przygotowania</h3>\r\n        <p>{recipe.czasPrzygotowania}</p>\r\n        <h3>Stopień trudności</h3>\r\n        <p>{recipe.stopienTrudnosci}</p>\r\n        <img src={recipe.zdjecie.url} alt={recipe.zdjecie.title}></img>\r\n        <h3>Składniki</h3>\r\n        <ul>{recipe.skladniki.map(skladnik => (<li key={skladnik}>{skladnik}</li>))}</ul>\r\n        <h3>Przygotowanie</h3>\r\n        <p>{documentToReactComponents(recipe.przygotowanie.json,RICHTEXT_OPIONS)}</p>\r\n    </>\r\n)\r\n\r\nexport default SingleRecipe;","import React from 'react';\r\nimport Footer from './components/footer';\r\nimport AllRecipesPage from './pages/allRecipes';\r\nimport Header from './components/header';\r\nimport MenuBar from './components/menuBar';\r\nimport SingleRecipe from './pages/singleRecipe';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst query=`{\r\n  przepisyCollection\r\n  {\r\n    items{\r\n      nazwa\r\n      krotkiOpis{\r\n        json\r\n      }\r\n      skladniki\r\n      przygotowanie{\r\n        json\r\n      }\r\n      zdjecie{\r\n        title\r\n        url\r\n      }\r\n      rodzaj\r\n      stopienTrudnosci\r\n      czasPrzygotowania\r\n    }\r\n  }\r\n}`;\r\n  \r\nfunction App() {\r\n    const [przepisy, setPrzepisy] = useState(null);\r\n    const [isSingleRecipe, setIsSIngleRecipe] = useState(false);\r\n    //pokazywanie przpisów z danej kategorii\r\n    const [recInCategory, setRecInCategory] = useState(null);\r\n    const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    window\r\n      .fetch(`https://graphql.contentful.com/content/v1/spaces/hhis3uc7myn9/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // Authenticate the request\r\n          Authorization: \"Bearer Y2QY1p9rWASMjQ7y8DZjQIHR0hIgfWuRvPah58eADow\",\r\n        },\r\n        // send the GraphQL query\r\n        body: JSON.stringify({ query }),\r\n      })\r\n      .then((response) => response.json())\r\n      .then(({ data, errors }) => {\r\n        if (errors) {\r\n          console.error(errors);\r\n        }\r\n\r\n        // rerender the entire component with new data\r\n        setPrzepisy(data.przepisyCollection.items);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() =>  {setRecInCategory(przepisy)}, 0);\r\n  }, [przepisy]);\r\n\r\n  if (!przepisy) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  function handleChange(value) {\r\n    if(value === 'Wszystkie przepisy') {\r\n      setIsSIngleRecipe(false);\r\n      return setRecInCategory(przepisy);\r\n    }\r\n\r\n    const rec = przepisy.filter(obj => {\r\n      return obj.rodzaj.includes(value)\r\n    });\r\n    setRecInCategory(rec);\r\n    setIsSIngleRecipe(false);\r\n  }\r\n\r\n  function handleShowRecipe(value) {\r\n    const rec = przepisy.find(obj => obj.nazwa === value);\r\n    setSelectedRecipe(rec);\r\n    setIsSIngleRecipe(true);\r\n  }\r\n\r\n    return (\r\n      <>\r\n        <Header/>\r\n        <MenuBar handleClick={handleChange} />\r\n        {isSingleRecipe ? <SingleRecipe recipe={selectedRecipe}/> : <AllRecipesPage recipes={recInCategory ?  recInCategory : przepisy} handleShowRecipe={handleShowRecipe} />}\r\n        <Footer />\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}